$buttonTypes:
    primary,
    secondary,
    tertiary,
    primary-inverse,
    secondary-inverse,
    tertiary-inverse,
    expressive,
    danger,
    facebook,
    paypal,
    trustpilot;

$buttonSizes: large, small;

$buttonFontFamily: var(--semantic-font-family-body);


@mixin buttonColors($buttonType) {
    background-color: var(--component-color-button-#{$buttonType}-background);
    border-color: var(--component-color-button-#{$buttonType}-border);
    color: var(--component-color-button-#{$buttonType}-text);

    .button-overlay {
        background-color: var(--component-color-button-#{$buttonType}-text);
    }
}

@mixin buttonSize($buttonSize) {
    padding: var(--component-size-button-#{$buttonSize}-padding-y) var(--component-size-button-#{$buttonSize}-padding-x);
    font-size: var(--component-size-button-#{$buttonSize}-font-size);

    .button-content {
        gap: var(--component-size-button-#{$buttonSize}-inline-spacing);
    }

    .ui-icon, .ui-text {
        $lineHeight: var(--component-size-button-#{$buttonSize}-line-height);
        max-height: $lineHeight;
        line-height: $lineHeight;
    }
}

ui-button {
    button {
        /* Reset */
        border: 0;
        padding: 0;
        position: relative;
        display: inline-flex;
        text-align: center;
        justify-content: center;
        align-items: center;
        border-style: solid;
        cursor: pointer;
        user-select: none;
        -webkit-appearance: none;
        -webkit-font-smoothing: antialiased;

        border-width: var(--component-border-width-button);
        font-family: $buttonFontFamily;

        // If browser supports focus-visible we can
        // use this selector to show focus style
        // only if focused via keyboard
        // Where it is more important focus be high contrast
        @supports selector(:focus-visible) {
            &:focus-visible {
                outline: none;
                box-shadow: 0 0 0 var(--semantic-border-width-focus) var(--component-color-button-expressive-background);
            }
        }
        @supports not selector(:focus-visible) {
            &:focus {
                outline: none;
                box-shadow: 0 0 0 var(--semantic-border-width-focus) var(--component-color-button-expressive-background);
            }
        }

        // Button Colors
        @each $buttonType in $buttonTypes {
            &.type-#{$buttonType} {
                @include buttonColors(($buttonType));
            }
        }

        // Button Sizes
        @each $buttonSize in $buttonSizes {
            &.size-#{$buttonSize} {
                @include buttonSize(($buttonSize));
            }
        }

        // Border Radius
        border-radius: var(--component-border-radius-button);

        // Disabled button
        &[disabled]{
            background-color: var(--component-color-button-disabled-background);
            border-color: var(--component-color-button-disabled-border);
            color: var(--component-color-button-disabled-text);
            cursor: default;
        }

        // Icon colour matching text color
        .buttonIcon {
            fill: currentColor;
        }

        // Hover and Focus states overlay
        .button-overlay {
            position: absolute;
            top: 0;
            right: 0;
            bottom: 0;
            left: 0;
            touch-action: none;
            pointer-events: none;
            opacity: 0;
            border-radius: var(--component-border-radius-button);
        }

        &:hover {
            .button-overlay {
                opacity: var(--component-opacity-overlay-hover);
            }
        }

        &:focus {
            .button-overlay {
                opacity: var(--component-opacity-overlay-focus);
            }
        }

        &.button--has-icon {
            &.button--icon--trailing {
                .button-content {
                    flex-direction: row-reverse;
                }
            }

        }

        .button-content {
            display: flex;
            align-items: center;


            .ui-icon {
                display: flex;
                align-items: center;
            }

            .ui-text {
                text-transform: var(--component-text-transform-button);
                letter-spacing: var(--component-letter-spacing-button);
                font-weight: var(--component-font-weight-button);
            }
        }

    }

}

ui-button button {
    &.button--full-width {
        display: flex;
        width: 100%;
    }
}