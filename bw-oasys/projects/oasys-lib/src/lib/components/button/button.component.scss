$buttonTypes: primary, primary-2, primary-3, secondary, secondary-2;

$buttonSizes: large, small;


@mixin buttonColors($buttonType) {
    background-color: var(--button-color-#{$buttonType}-background);
    border-color: var(--button-color-#{$buttonType}-border);
    color: var(--button-color-#{$buttonType}-text);

    .lib-icon svg {
        fill: currentColor;
    }
}

@mixin buttonSize($buttonSize) {
    $paddingX: var(--button-size-#{$buttonSize}-padding-x);
    
    $borderWidth: var(--button-size-#{$buttonSize}-border-width);
    $lineHeight: var(--button-size-#{$buttonSize}-line-height);
    
    $calculatedHeight: calc(var(--button-size-#{$buttonSize}-height) / 2);
    $calculatedLineHeight: calc($lineHeight / 2);
    $calculatedBorderWidth: calc($borderWidth / 2);
    $paddingY: calc($calculatedHeight - $calculatedLineHeight - $calculatedBorderWidth);

    $paddingX--with-icon: calc($paddingX * 2);

    padding-top: $paddingY;
    padding-right: $paddingX;
    padding-bottom: $paddingY;
    padding-left: $paddingX;
    border-width: $borderWidth;

    .ui-text {
        text-transform: var(--button-size-#{$buttonSize}-text-transform);
        line-height: $lineHeight;
    }

    &.button--has-icon {
        $iconSize: var(--button-size-#{$buttonSize}-icon-size);
        $IconOffset: calc($iconSize / 2 * -1);
        $inlineSpacing: var(--button-size-#{$buttonSize}-inline-spacing);

        &.button--icon--leading {
            padding-left: $paddingX--with-icon;

            .lib-icon {
                right: calc(100% + $inlineSpacing);
            }
        }

        &.button--icon--trailing {
            padding-right: $paddingX--with-icon;

            .lib-icon {
                left: calc(100% + $inlineSpacing);
            }
        }
      
        &.button--icon--only {
            padding-left: $paddingX;
            padding-right: $paddingX;
            
            .lib-icon {
                background: red;
                // margin-left: $IconOffset;
                // margin-right: $IconOffset;
            }
        }
        
        .lib-icon {
            position: absolute;
            top: 50%;
            transform: translateY(-50%);

            svg {
                width: $iconSize;
            }
        }
    }
}


lib-button {
    display: contents;

    button {
        /* Reset */
        border: 0;
        -webkit-appearance: none;
        padding: 0;
        display: inline-flex;
        text-align: center;
        justify-content: center;
        align-items: center;
        border-style: solid;


        // Button Colors
        @each $buttonType in $buttonTypes {
            &.type-#{$buttonType} {
                @include buttonColors(($buttonType));
            }
        }
        
        // Button Sizes
        @each $buttonSize in $buttonSizes {
            &.size-#{$buttonSize} {
                @include buttonSize(($buttonSize));
            }
        }
    }
}

