{
    "pipes": [],
    "interfaces": [
        {
            "name": "User",
            "id": "interface-User-9c7e5f1bbbab702cb032307d130876cb68969b0cd4eedef32a0c8cad8081a54e5f8f577ed6ad4539c1b99a1d246cb34031d198c2ea8eba440e64e91b14f01fdc",
            "file": "stories/User.ts",
            "deprecated": false,
            "deprecationMessage": "",
            "type": "interface",
            "sourceCode": "export interface User {}\n",
            "properties": [],
            "indexSignatures": [],
            "methods": []
        }
    ],
    "injectables": [
        {
            "name": "OasysLibService",
            "id": "injectable-OasysLibService-a49e302a469545011c74f8ec98aa5c60aa02f13e236c574b549e4d49e7dbe1dc0c0b8a6a0685e55d2d2bf1688f1f140107421d8f75c1b55affc137c5e584f8f5",
            "file": "projects/oasys-lib/src/lib/oasys-lib.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OasysLibService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "TokenService",
            "id": "injectable-TokenService-61fc30ecad96d2c4963b0ff7f566cff532ebbf14304ed1e5201a847c544f1fa2abb4cdcb8bc575498adaf951693706ea1eb18fc5a51e694d1f41408e865b5943",
            "file": "projects/oasys-lib/src/lib/services/token.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTokenValue",
                    "args": [
                        {
                            "name": "tokenName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tokenName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { WindowService } from './window.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(private windowRef: WindowService){}\n  \n  getTokenValue(tokenName: string): string {\n    return this.windowRef.nativeWindow.getComputedStyle(\n      this.windowRef.nativeWindow.document.documentElement\n    ).getPropertyValue(tokenName).trim() || '';\n  }\n  \n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WindowService",
            "id": "injectable-WindowService-57b2a496d095c299bc4e72a4b49295ddb8c6f794abb6e982bf159ba1859075867b855661b6be660c149eb6b5c7dd78806020e4a5d94bc1370cbe2410efa55d8f",
            "file": "projects/oasys-lib/src/lib/services/window.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n  \n  get nativeWindow(): any {\n    return _window();\n  }\n  \n}",
            "accessors": {
                "nativeWindow": {
                    "name": "nativeWindow",
                    "getSignature": {
                        "name": "nativeWindow",
                        "type": "any",
                        "returnType": "any",
                        "line": 12
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-124afc86de969d5ffb15ca67aee5ac711630e087f0762237b7c3b18dead0bd97d3bf3467db8dabe4295ebd1c0405e3fbcf9e6ed74a29783356ebf89013746edd",
            "file": "projects/oasys-lib/src/lib/components/button/button.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "IconNames",
                    "decorators": []
                },
                {
                    "name": "buttonIconPlacement",
                    "defaultValue": "'leading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IconContext",
                    "decorators": []
                },
                {
                    "name": "buttonSize",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonType",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"primary\" | \"primary-2\" | \"primary-3\" | \"secondary\" | \"secondary-2\"",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "iconContext",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconContext",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "textTransform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextTransform",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clickButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, ViewEncapsulation, EventEmitter, ChangeDetectionStrategy } from '@angular/core';\nimport { TokenService } from '../../services/token.service';\nimport { IconNames, IconContext } from '../icon/icon';\nimport { TextTransform } from '../text/text';\n\n@Component({\n  selector:'ui-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent implements OnInit {\n\n  // Button Content\n  @Input() buttonText?: string;\n  @Input() buttonIcon?: IconNames;\n  @Input() buttonIconPlacement: IconContext = 'leading';\n\n  // Button Stylings\n  @Input() buttonSize: 'small'|'large' = 'large';\n  @Input() buttonType: 'primary'|'primary-2'|'primary-3'|'secondary'|'secondary-2' = 'primary';\n  \n  // Button Actions\n  @Input() href: string = '';\n  @Output() buttonClick: EventEmitter<void> = new EventEmitter();\n\n  buttonClasses: string = '';\n  iconContext: IconContext = 'none';\n  textTransform!: TextTransform;\n\n  constructor(private tokenService: TokenService) { }\n\n  clickButton(): void {\n    console.log('button was clicked');\n    this.buttonClick.emit();\n  }\n\n  ngOnInit(): void {\n    this.buttonClasses = [\n      `type-${this.buttonType}`,\n      `size-${this.buttonSize}`,\n      `${this.buttonIcon ? 'button--has-icon': ''}`,\n      `${this.buttonText && this.buttonIcon ? 'button--icon--'+this.buttonIconPlacement : ''}`,\n      `${!this.buttonText && this.buttonIcon ? 'button--icon--only' : ''}`\n    ].join(' ');\n\n    if(this.buttonIcon) {\n      this.iconContext = this.buttonText ? this.buttonIconPlacement : 'iconOnly';\n    }\n\n    this.textTransform = this.tokenService.getTokenValue(\n      `--style-button-${this.buttonSize}-text-transform`\n    ) as TextTransform;\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$buttonTypes: primary, primary-2, primary-3, secondary, secondary-2;\n\n$buttonSizes: large, small;\n\n\n@mixin buttonColors($buttonType) {\n    background-color: var(--color-button-#{$buttonType}-background);\n    border-color: var(--color-button-#{$buttonType}-border);\n    color: var(--color-button-#{$buttonType}-text);\n\n    .buttonIcon {\n        fill: currentColor;\n    }\n}\n\n@mixin buttonSize($buttonSize) {\n    $borderWidth: var(--size-button-#{$buttonSize}-border-width);\n    $lineHeight: var(--size-button-#{$buttonSize}-line-height);\n    $buttonMinimumHeight: var(--size-button-#{$buttonSize}-height);\n    \n    \n    $_calculatedHeight: calc($buttonMinimumHeight / 2);\n    $_calculatedLineHeight: calc($lineHeight / 2);\n    \n\n    $paddingX: var(--size-button-#{$buttonSize}-padding-x);\n    $paddingY: calc($_calculatedHeight - $_calculatedLineHeight - $borderWidth);\n\n    $paddingX--with-icon: calc($paddingX * 2);\n\n    min-height: $buttonMinimumHeight;\n    min-width: $buttonMinimumHeight;\n    padding-top: $paddingY;\n    padding-bottom: $paddingY;\n    \n    border-width: $borderWidth;\n\n    .button-content {\n        display: flex;\n        align-items: center;\n        gap: var(--size-button-#{$buttonSize}-inline-spacing); \n\n        .ui-icon {\n            max-height: $lineHeight;\n            display: flex;\n            align-items: center;\n        }\n\n        .ui-text {\n            line-height: $lineHeight;\n        }\n    }\n\n    \n\n    &.button--has-icon {\n        &.button--icon--trailing {\n            .lib-button-content {\n                flex-direction: row-reverse;\n            }\n        }\n        &.button--icon--only {\n            max-width: calc($buttonMinimumHeight - $borderWidth);\n        }\n    }\n}\n\n\nui-button {\n    button {\n        /* Reset */\n        border: 0;\n        -webkit-appearance: none;\n        padding: 0;\n        display: inline-flex;\n        text-align: center;\n        justify-content: center;\n        align-items: center;\n        border-style: solid;\n\n\n        // Button Colors\n        @each $buttonType in $buttonTypes {\n            &.type-#{$buttonType} {\n                @include buttonColors(($buttonType));\n            }\n        }\n        \n        // Button Sizes\n        @each $buttonSize in $buttonSizes {\n            &.size-#{$buttonSize} {\n                @include buttonSize(($buttonSize));\n            }\n        }\n\n    }\n}\n\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "\n<button (click)=\"clickButton()\" [routerLink]=\"href || null\" [ngClass]=\"buttonClasses\">\n    <ui-box paddingX=\"default\" class=\"button-content\">\n        <ui-icon *ngIf=\"buttonIcon\" [iconName]=\"buttonIcon\" [iconSize]=\"buttonSize\" [iconClass]=\"'buttonIcon'\" [iconContext]=\"iconContext\"></ui-icon>\n        <ui-text *ngIf=\"buttonText\" [textTransform]=\"textTransform\">{{buttonText}}</ui-text>\n    </ui-box>\n</button>\n\n"
        },
        {
            "name": "HeaderComponent",
            "id": "component-HeaderComponent-a557eec14f72c438a8033301f4d6ce023e0a1844a3b06ec2b38794a612acc31735ae78a5ee10071b230c8c20d699eb914554e69d07ade54adb371da8efb464cc",
            "file": "stories/header.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-header",
            "styleUrls": [
                "./header.css"
            ],
            "styles": [],
            "template": "<header>    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 65,
                    "type": "User | null",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "onCreateAccount",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 74,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogin",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 68,
                    "type": "EventEmitter"
                },
                {
                    "name": "onLogout",
                    "defaultValue": "new EventEmitter<Event>()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 71,
                    "type": "EventEmitter"
                }
            ],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, Output, EventEmitter } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-header',\n  template: `<header>\n    <div class=\"wrapper\">\n      <div>\n        <svg width=\"32\" height=\"32\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M10 0h12a10 10 0 0110 10v12a10 10 0 01-10 10H10A10 10 0 010 22V10A10 10 0 0110 0z\"\n              fill=\"#FFF\"\n            />\n            <path\n              d=\"M5.3 10.6l10.4 6v11.1l-10.4-6v-11zm11.4-6.2l9.7 5.5-9.7 5.6V4.4z\"\n              fill=\"#555AB9\"\n            />\n            <path\n              d=\"M27.2 10.6v11.2l-10.5 6V16.5l10.5-6zM15.7 4.4v11L6 10l9.7-5.5z\"\n              fill=\"#91BAF8\"\n            />\n          </g>\n        </svg>\n        <h1>Acme</h1>\n      </div>\n      <div>\n        <div *ngIf=\"user\">\n          <span class=\"welcome\">\n            Welcome, <b>{{ user.name }}</b\n            >!\n          </span>\n          <storybook-button\n            *ngIf=\"user\"\n            size=\"small\"\n            (onClick)=\"onLogout.emit($event)\"\n            label=\"Log out\"\n          ></storybook-button>\n        </div>\n        <div *ngIf=\"!user\">\n          <storybook-button\n            *ngIf=\"!user\"\n            size=\"small\"\n            class=\"margin-left\"\n            (onClick)=\"onLogin.emit($event)\"\n            label=\"Log in\"\n          ></storybook-button>\n          <storybook-button\n            *ngIf=\"!user\"\n            primary\n            size=\"small\"\n            primary=\"true\"\n            class=\"margin-left\"\n            (onClick)=\"onCreateAccount.emit($event)\"\n            label=\"Sign up\"\n          ></storybook-button>\n        </div>\n      </div>\n    </div>\n  </header>`,\n  styleUrls: ['./header.css'],\n})\nexport default class HeaderComponent {\n  @Input()\n  user: User | null = null;\n\n  @Output()\n  onLogin = new EventEmitter<Event>();\n\n  @Output()\n  onLogout = new EventEmitter<Event>();\n\n  @Output()\n  onCreateAccount = new EventEmitter<Event>();\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".wrapper {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.1);\n  padding: 15px 20px;\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n}\n\nsvg {\n  display: inline-block;\n  vertical-align: top;\n}\n\nh1 {\n  font-weight: 900;\n  font-size: 20px;\n  line-height: 1;\n  margin: 6px 0 6px 10px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nbutton + button {\n  margin-left: 10px;\n}\n\n.welcome {\n  color: #333;\n  font-size: 14px;\n  margin-right: 10px;\n}\n",
                    "styleUrl": "./header.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-0335154a9a0967c1bd489da06eed231bf5c6d3b2a6343957e439702275b7a3a6f1e076bf6a7f6757013bd9710afd9d1adc13f25994fc616feea702429304e933",
            "file": "projects/oasys-lib/src/lib/components/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconContext",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IconContext",
                    "decorators": []
                },
                {
                    "name": "iconHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IconNames",
                    "decorators": []
                },
                {
                    "name": "iconSize",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "iconWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconPlacementClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "convertRemToPixels",
                    "args": [
                        {
                            "name": "remString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "remString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { TokenService } from '../../services/token.service';\nimport { WindowService } from '../../services/window.service';\nimport { IconNames, IconContext } from './icon';\n@Component({\n  selector:'ui-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class IconComponent implements OnInit {\n  @Input() iconSize: 'small'|'large' = 'large';\n  @Input() iconName!: IconNames;\n  @Input() iconContext: IconContext = 'none';\n  \n  @Input() iconWidth?: number;\n  @Input() iconHeight?: number;\n  @Input() iconClass?: string;\n\n  size?: string;\n  iconPlacementClass?: string;\n  \n  constructor(private tokenService: TokenService, private windowRef: WindowService) { }\n\n  convertRemToPixels(remString: string): number {    \n    const remNumber = parseFloat(remString.replace('rem', ''));\n    return remNumber * parseFloat(getComputedStyle(this.windowRef.nativeWindow.document.documentElement).fontSize);\n  }\n\n  ngOnInit(): void {\n    this.size = this.tokenService.getTokenValue(`--size-icon-${this.iconSize}`);;\n    this.iconPlacementClass = `icon-context-${this.iconContext}`;\n    if (!this.iconWidth || !this.iconHeight) {\n      const sizeInPixels = this.convertRemToPixels(this.size);\n      this.iconWidth = sizeInPixels;\n      this.iconHeight = sizeInPixels;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$iconContexts: leading, trailing, iconOnly;\n$iconSizes: large, small;\n\n\n@mixin iconSize($iconSize){\n  $iconPositionAdjustment: var(--icon-position-modifier-#{$iconSize});\n\n  &.icon-context-leading {\n    margin-left: #{$iconPositionAdjustment};\n  }\n\n  &.icon-context-trailing {\n    margin-right: #{$iconPositionAdjustment};\n  }\n  \n  &.icon-context-iconOnly {\n    margin-left: #{$iconPositionAdjustment};\n    margin-right: #{$iconPositionAdjustment};\n  }\n\n}\n\n.lib-icon {\n  display: inline-flex;\n\n  // Icon Contexts\n  @each $iconSize in $iconSizes {\n    @include iconSize(($iconSize));\n  }\n}",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"ui-icon {{iconPlacementClass}}\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" attr.width=\"{{iconWidth}}px\" attr.height=\"{{iconHeight}}px\" attr.class=\"{{iconClass}}\">\n    <use attr.xlink:href=\"./assets/icons/icons.svg#icon-{{iconName}}-{{iconWidth}}\"></use>\n  </svg>\n</div>\n"
        },
        {
            "name": "LayoutBoxComponent",
            "id": "component-LayoutBoxComponent-f841cedb29fcd391b7046bf95597423f5600e788b04c4e9d3d5e150e56ea7acdd7e6417203aca5d35c675cbea687ec88b899c35c3c2e5b8a772d38344ea238a2",
            "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-box",
            "styleUrls": [
                "./box.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "padding",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingBottom",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingLeft",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingRight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 24,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingTop",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 23,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingX",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 20,
                    "type": "BoxPaddings",
                    "decorators": []
                },
                {
                    "name": "paddingY",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "BoxPaddings",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "boxLayoutClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 30,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component} from '@angular/core';\n\n@Component({\n  selector:'ui-box',\n  template: '<ng-content></ng-content>',\n  host: {\n        '[class]' : 'boxLayoutClasses'\n      },\n  styleUrls: ['./box.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutBoxComponent implements OnInit {\n  boxLayoutClasses?: string;\n\n  @Input() padding?: BoxPaddings = 'default';\n\n  @Input() paddingX?: BoxPaddings;\n  @Input() paddingY?: BoxPaddings;\n \n  @Input() paddingTop?: BoxPaddings;\n  @Input() paddingRight?: BoxPaddings;\n  @Input() paddingBottom?: BoxPaddings;\n  @Input() paddingLeft?: BoxPaddings;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    \n    this.boxLayoutClasses = [      \n      this.paddingY ? `ui-layout-box-y-${this.paddingY}` : '',\n      this.paddingX ? `ui-layout-box-x-${this.paddingX}` : '',\n\n      this.paddingTop ? `ui-layout-box-top-${this.paddingTop}` : '',\n      this.paddingRight ? `ui-layout-box-right-${this.paddingRight}` : '',\n      this.paddingBottom ? `ui-layout-box-bottom-${this.paddingBottom}` : '',\n      this.paddingLeft ? `ui-layout-box-leftx-${this.paddingLeft}` : '',\n    ].join(' ');\n\n    if(!this.boxLayoutClasses.length) {\n      this.boxLayoutClasses.concat(` ui-layout-box-${this.padding}`);\n    }\n\n  }\n\n}\n\nexport type BoxPaddings = 'xsmall'|'small'|'medium'|'large'|'default';",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$layout-box-sizes: 'xsmall', 'small', 'default', 'large';\n\n$layout-box-axis: 'y', 'x';\n\n// Box Sizes\n@each $layout-box-size in $layout-box-sizes {\n  .ui-layout-box-#{$layout-box-size} { \n    padding:  var(--size-unit-#{$layout-box-size});\n  }\n}\n\n// Axis Sizes\n@each $layout-box-size in $layout-box-sizes {\n  .ui-layout-box-y-#{$layout-box-size} { \n    padding-top: var(--size-unit-#{$layout-box-size});\n    padding-bottom: var(--size-unit-#{$layout-box-size});\n  }\n  .ui-layout-box-x-#{$layout-box-size} { \n    padding-left: var(--size-unit-#{$layout-box-size});\n    padding-right: var(--size-unit-#{$layout-box-size});\n  }\n}\n\n// Top, right, bottom, left spacing\n@each $layout-box-size in $layout-box-sizes {\n  .ui-layout-box-top-#{$layout-box-size} { \n    padding-top: var(--size-unit-#{$layout-box-size});\n  }\n  .ui-layout-box-right-#{$layout-box-size} { \n    padding-right: var(--size-unit-#{$layout-box-size});\n  }\n  .ui-layout-box-bottom-#{$layout-box-size} { \n    padding-bottom: var(--size-unit-#{$layout-box-size});\n  }\n  .ui-layout-box-left-#{$layout-box-size} { \n    padding-left: var(--size-unit-#{$layout-box-size});\n  }\n}\n\n\n",
                    "styleUrl": "./box.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 26
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "LayoutInlineComponent",
            "id": "component-LayoutInlineComponent-9c6d7dbe5d9d9280d68e160733917e78391a3ea0f17dbd0897b13c0ca00be68551dace44ec2aebed03b099163cf2bca2c1af4551a620436f7ba9a40753ebf7f9",
            "file": "projects/oasys-lib/src/lib/components/layout/inline/inline.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-inline",
            "styleUrls": [
                "./inline.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./inline.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector:'ui-inline',\n  templateUrl: './inline.component.html',\n  styleUrls: ['./inline.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutInlineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-layout-inline {\n    display: inline-flex;\n    position: relative;\n}\n\n.ui-layout-inline > * {\n    margin-left: var(--layout-inline-spacing-default);\n    margin-right: var(--layout-inline-spacing-default);\n}\n\n.ui-layout-inline:first-child {\n    margin-left: 0;\n}\n\n.ui-layout-inline:last-child {\n    margin-right: 0;\n}\n\n.ui-layout-inline:only-child {\n    margin-left: 0;\n    margin-right: 0;\n}",
                    "styleUrl": "./inline.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"ui-layout-inline\"><ng-content></ng-content></div>"
        },
        {
            "name": "PageComponent",
            "id": "component-PageComponent-7126d8c2607c946741c651482413b43feb72b2d63cac9d3ac173fde206a5e635eb4cdbf7ca7ac9327c7d4d05cf7ef619144c34c11609ad677081d0ee4e855064",
            "file": "stories/page.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "storybook-page",
            "styleUrls": [
                "./page.css"
            ],
            "styles": [],
            "template": "<article>    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "user",
                    "defaultValue": "null",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "User | null",
                    "optional": false,
                    "description": "",
                    "line": 64
                }
            ],
            "methodsClass": [
                {
                    "name": "doCreateAccount",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 74,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogin",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 70,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "doLogout",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 66,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { User } from './User';\n\n@Component({\n  selector: 'storybook-page',\n  template: `<article>\n    <storybook-header\n      [user]=\"user\"\n      (onLogout)=\"doLogout()\"\n      (onLogin)=\"doLogin()\"\n      (onCreateAccount)=\"doCreateAccount()\"\n    ></storybook-header>\n    <section>\n      <h2>Pages in Storybook</h2>\n      <p>\n        We recommend building UIs with a\n        <a href=\"https://componentdriven.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n          <strong>component-driven</strong>\n        </a>\n        process starting with atomic components and ending with pages.\n      </p>\n      <p>\n        Render pages with mock data. This makes it easy to build and review page states without\n        needing to navigate to them in your app. Here are some handy patterns for managing page data\n        in Storybook:\n      </p>\n      <ul>\n        <li>\n          Use a higher-level connected component. Storybook helps you compose such data from the\n          \"args\" of child component stories\n        </li>\n        <li>\n          Assemble data in the page component from your services. You can mock these services out\n          using Storybook.\n        </li>\n      </ul>\n      <p>\n        Get a guided tutorial on component-driven development at\n        <a href=\"https://storybook.js.org/tutorials/\" target=\"_blank\" rel=\"noopener noreferrer\">\n          Storybook tutorials\n        </a>\n        . Read more in the\n        <a href=\"https://storybook.js.org/docs\" target=\"_blank\" rel=\"noopener noreferrer\"> docs </a>\n        .\n      </p>\n      <div class=\"tip-wrapper\">\n        <span class=\"tip\">Tip</span> Adjust the width of the canvas with the\n        <svg width=\"10\" height=\"10\" viewBox=\"0 0 12 12\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g fill=\"none\" fillRule=\"evenodd\">\n            <path\n              d=\"M1.5 5.2h4.8c.3 0 .5.2.5.4v5.1c-.1.2-.3.3-.4.3H1.4a.5.5 0 01-.5-.4V5.7c0-.3.2-.5.5-.5zm0-2.1h6.9c.3 0 .5.2.5.4v7a.5.5 0 01-1 0V4H1.5a.5.5 0 010-1zm0-2.1h9c.3 0 .5.2.5.4v9.1a.5.5 0 01-1 0V2H1.5a.5.5 0 010-1zm4.3 5.2H2V10h3.8V6.2z\"\n              id=\"a\"\n              fill=\"#999\"\n            />\n          </g>\n        </svg>\n        Viewports addon in the toolbar\n      </div>\n    </section>\n  </article>`,\n  styleUrls: ['./page.css'],\n})\nexport default class PageComponent {\n  user: User | null = null;\n\n  doLogout() {\n    this.user = null;\n  }\n\n  doLogin() {\n    this.user = { name: 'Jane Doe' };\n  }\n\n  doCreateAccount() {\n    this.user = { name: 'Jane Doe' };\n  }\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "section {\n  font-family: 'Nunito Sans', 'Helvetica Neue', Helvetica, Arial, sans-serif;\n  font-size: 14px;\n  line-height: 24px;\n  padding: 48px 20px;\n  margin: 0 auto;\n  max-width: 600px;\n  color: #333;\n}\n\nsection h2 {\n  font-weight: 900;\n  font-size: 32px;\n  line-height: 1;\n  margin: 0 0 4px;\n  display: inline-block;\n  vertical-align: top;\n}\n\nsection p {\n  margin: 1em 0;\n}\n\nsection a {\n  text-decoration: none;\n  color: #1ea7fd;\n}\n\nsection ul {\n  padding-left: 30px;\n  margin: 1em 0;\n}\n\nsection li {\n  margin-bottom: 8px;\n}\n\nsection .tip {\n  display: inline-block;\n  border-radius: 1em;\n  font-size: 11px;\n  line-height: 12px;\n  font-weight: 700;\n  background: #e7fdd8;\n  color: #66bf3c;\n  padding: 4px 12px;\n  margin-right: 10px;\n  vertical-align: top;\n}\n\nsection .tip-wrapper {\n  font-size: 13px;\n  line-height: 20px;\n  margin-top: 40px;\n  margin-bottom: 40px;\n}\n\nsection .tip-wrapper svg {\n  display: inline-block;\n  height: 12px;\n  width: 12px;\n  margin-right: 4px;\n  vertical-align: top;\n  margin-top: 3px;\n}\n\nsection .tip-wrapper svg path {\n  fill: #1ea7fd;\n}\n",
                    "styleUrl": "./page.css"
                }
            ],
            "stylesData": ""
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-1887c706c5b461d2a7ea09aa7f6fa9435e6c1c7941b3be506b6140032fa3389a08c727d759fc36297668f8d07fd22310a3812b0baa5972e7ffba0d9d050d7043",
            "file": "projects/oasys-lib/src/lib/components/text/text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "textAlign",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"center\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "textTransform",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TextTransform",
                    "decorators": []
                },
                {
                    "name": "textWeight",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"normal\" | \"medium\" | \"bold\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "uiTextClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TextTransform } from './text';\n\n@Component({\n  selector:'ui-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextComponent implements OnInit {\n\n  @Input() textAlign: 'left' | 'center' | 'right' = 'left';\n  @Input() textWeight: 'normal' | 'medium' | 'bold' = 'normal';\n  @Input() textTransform: TextTransform = 'none';\n\n  uiTextClasses!: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.uiTextClasses = [\n      `ui-text--align-${this.textAlign}`,\n      `ui-text--weight-${this.textWeight}`,\n      `ui-text--transform-${this.textTransform}`,\n    ].join(' ');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-text {\n    font-size: var(--size-font-base);\n    font-family: var(--font-family-body);\n    \n    font-weight: var(--font-weight-normal);\n    \n    &.ui-text--weight-medium {\n        font-weight: var(--font-weight-medium);\n    }\n    \n    &.ui-text--weight-bold {\n        font-weight: var(--font-weight-bold);\n    }\n\n    &.ui-text--transform-uppercase {\n        text-transform: uppercase;\n    }\n}\n\n\n// Modifiers\n.ui-text { \n    &.ui-text--align-left {\n        text-align: left;\n    }\n    &.ui-text--align-center {\n        text-align: center;\n    }\n    &.ui-text--align-right {\n        text-align: right;\n    }\n}",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span class=\"ui-text\" [ngClass]=\"uiTextClasses\"><ng-content></ng-content></span>"
        }
    ],
    "modules": [
        {
            "name": "OasysLibModule",
            "id": "module-OasysLibModule-8f5af4937faa0151f3aa9466cd6b2e74744e8f5f3f270396ab801af8b0f9b04f633bb1e7b2bf7115b4819cc826672c66f2d05bcb0ecae3897429ab907f3706b8",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/oasys-lib/src/lib/oasys-lib.module.ts",
            "methods": [],
            "sourceCode": "import { CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './components/button/button.component';\nimport { LayoutInlineComponent } from './components/layout/inline/inline.component';\nimport { TextComponent } from './components/text/text.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { LayoutBoxComponent } from './components/layout/box/box.component';\nimport { WindowService } from './services/window.service';\n\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    LayoutInlineComponent,\n    TextComponent,\n    IconComponent,\n    LayoutBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule\n  ],\n  exports: [\n    ButtonComponent,\n    TextComponent,\n    LayoutBoxComponent\n  ],\n  providers: [\n    WindowService\n  ],\n  entryComponents: [\n    ButtonComponent\n  ]\n})\nexport class OasysLibModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "WindowService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LayoutBoxComponent"
                        },
                        {
                            "name": "LayoutInlineComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "LayoutBoxComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "Button",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/oasys-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/oasys-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
            }
        ],
        "functions": [
            {
                "name": "_window",
                "file": "projects/oasys-lib/src/lib/services/window.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            }
        ],
        "typealiases": [
            {
                "name": "BoxPaddings",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xsmall\" | \"small\" | \"medium\" | \"large\" | \"default\"",
                "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconContext",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"leading\" | \"trailing\" | \"iconOnly\" | \"none\"",
                "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"pin\" | \"heart\" | \"basket\"",
                "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TextTransform",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"none\" | \"uppercase\" | \"lowercase\" | \"capitalize\"",
                "file": "projects/oasys-lib/src/lib/components/text/text.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/Button.stories.ts": [
                {
                    "name": "Button",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args,\n})"
                }
            ],
            "projects/oasys-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/oasys-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/oasys-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ]
        },
        "groupedFunctions": {
            "projects/oasys-lib/src/lib/services/window.service.ts": [
                {
                    "name": "_window",
                    "file": "projects/oasys-lib/src/lib/services/window.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/oasys-lib/src/lib/components/layout/box/box.component.ts": [
                {
                    "name": "BoxPaddings",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xsmall\" | \"small\" | \"medium\" | \"large\" | \"default\"",
                    "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/oasys-lib/src/lib/components/icon/icon.ts": [
                {
                    "name": "IconContext",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"leading\" | \"trailing\" | \"iconOnly\" | \"none\"",
                    "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "IconNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"pin\" | \"heart\" | \"basket\"",
                    "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/oasys-lib/src/lib/components/text/text.ts": [
                {
                    "name": "TextTransform",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"none\" | \"uppercase\" | \"lowercase\" | \"capitalize\"",
                    "file": "projects/oasys-lib/src/lib/components/text/text.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/oasys-lib/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/14",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/11",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/layout/inline/inline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutInlineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/oasys-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OasysLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/token.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TokenService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/window.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WindowService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/window.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "_window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Button",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/User.ts",
                "type": "interface",
                "linktype": "interface",
                "name": "User",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/header.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "HeaderComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "stories/page.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "PageComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            }
        ]
    }
}