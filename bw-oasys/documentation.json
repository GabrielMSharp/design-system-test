{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "OasysLibService",
            "id": "injectable-OasysLibService-a49e302a469545011c74f8ec98aa5c60aa02f13e236c574b549e4d49e7dbe1dc0c0b8a6a0685e55d2d2bf1688f1f140107421d8f75c1b55affc137c5e584f8f5",
            "file": "projects/oasys-lib/src/lib/oasys-lib.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class OasysLibService {\n\n  constructor() { }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 6
            },
            "type": "injectable"
        },
        {
            "name": "TokenService",
            "id": "injectable-TokenService-61fc30ecad96d2c4963b0ff7f566cff532ebbf14304ed1e5201a847c544f1fa2abb4cdcb8bc575498adaf951693706ea1eb18fc5a51e694d1f41408e865b5943",
            "file": "projects/oasys-lib/src/lib/services/token.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTokenValue",
                    "args": [
                        {
                            "name": "tokenName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "string",
                    "typeParameters": [],
                    "line": 11,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "tokenName",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport { WindowService } from './window.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TokenService {\n\n  constructor(private windowRef: WindowService){}\n  \n  getTokenValue(tokenName: string): string {\n    return this.windowRef.nativeWindow.getComputedStyle(\n      this.windowRef.nativeWindow.document.documentElement\n    ).getPropertyValue(tokenName).trim() || '';\n  }\n  \n}",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 7,
                "jsdoctags": [
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "type": "injectable"
        },
        {
            "name": "WindowService",
            "id": "injectable-WindowService-57b2a496d095c299bc4e72a4b49295ddb8c6f794abb6e982bf159ba1859075867b855661b6be660c149eb6b5c7dd78806020e4a5d94bc1370cbe2410efa55d8f",
            "file": "projects/oasys-lib/src/lib/services/window.service.ts",
            "properties": [],
            "methods": [],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\n\nfunction _window(): any {\n  return window;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WindowService {\n  \n  get nativeWindow(): any {\n    return _window();\n  }\n  \n}",
            "accessors": {
                "nativeWindow": {
                    "name": "nativeWindow",
                    "getSignature": {
                        "name": "nativeWindow",
                        "type": "any",
                        "returnType": "any",
                        "line": 12
                    }
                }
            },
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "ButtonComponent",
            "id": "component-ButtonComponent-199d421b92e5122168cdb802756a1205b331bc354f8762599c8e743f5b4c847814f43141a318df9369427b4356dbb8de5a89107cb48e0e4011c82da30b4d4747",
            "file": "projects/oasys-lib/src/lib/components/button/button.component.ts",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-button",
            "styleUrls": [
                "./button.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./button.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "buttonIcon",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "IconNames",
                    "decorators": []
                },
                {
                    "name": "buttonIconPlacement",
                    "defaultValue": "'leading'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "IconContext",
                    "decorators": []
                },
                {
                    "name": "buttonSize",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 21,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "buttonText",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "buttonType",
                    "defaultValue": "'primary'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 22,
                    "type": "\"primary\" | \"secondary\" | \"tertiary\" | \"primary-inverse\" | \"secondary-inverse\" | \"teriary-inverse\"",
                    "decorators": []
                },
                {
                    "name": "href",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 25,
                    "type": "string",
                    "decorators": []
                }
            ],
            "outputsClass": [
                {
                    "name": "buttonClick",
                    "defaultValue": "new EventEmitter()",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 26,
                    "type": "EventEmitter<void>"
                }
            ],
            "propertiesClass": [
                {
                    "name": "buttonClasses",
                    "defaultValue": "''",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 28
                },
                {
                    "name": "iconContext",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "IconContext",
                    "optional": false,
                    "description": "",
                    "line": 29
                },
                {
                    "name": "textTransform",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "TextTransform",
                    "optional": false,
                    "description": "",
                    "line": 30
                }
            ],
            "methodsClass": [
                {
                    "name": "clickButton",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 34,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnChanges",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 60,
                    "deprecated": false,
                    "deprecationMessage": ""
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 39,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, Output, ViewEncapsulation, EventEmitter, ChangeDetectionStrategy, ChangeDetectorRef, OnChanges } from '@angular/core';\nimport { TokenService } from '../../services/token.service';\nimport { IconNames, IconContext } from '../icon/icon';\nimport { TextTransform } from '../text/text';\n\n@Component({\n  selector:'ui-button',\n  templateUrl: './button.component.html',\n  styleUrls: ['./button.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  // changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class ButtonComponent implements OnInit, OnChanges {\n\n  // // Button Content\n  @Input() buttonText: string;\n  @Input() buttonIcon?: IconNames;\n  @Input() buttonIconPlacement: IconContext = 'leading';\n\n  // Button Stylings\n  @Input() buttonSize: 'small'|'large' = 'large';\n  @Input() buttonType: 'primary'|'secondary'|'tertiary'|'primary-inverse'|'secondary-inverse'|'teriary-inverse' = 'primary';\n\n  // Button Actions\n  @Input() href: string = '';\n  @Output() buttonClick: EventEmitter<void> = new EventEmitter();\n\n  buttonClasses: string = '';\n  iconContext: IconContext = 'none';\n  textTransform!: TextTransform;\n\n  constructor(private tokenService: TokenService) { }\n\n  clickButton(): void {\n    console.log('button was clicked');\n    this.buttonClick.emit();\n  }\n\n  ngOnInit(): void {\n    this.buttonClasses = [\n      `type-${this.buttonType}`,\n      `size-${this.buttonSize}`,\n      `${this.buttonIcon ? 'button--has-icon': ''}`,\n      `${this.buttonText && this.buttonIcon ? 'button--icon--'+this.buttonIconPlacement : ''}`,\n      `${!this.buttonText && this.buttonIcon ? 'button--icon--only' : ''}`\n    ].join(' ');\n\n    console.log('buttonClasses: ', this.buttonClasses);\n\n    if(this.buttonIcon) {\n      this.iconContext = this.buttonText ? this.buttonIconPlacement : 'iconOnly';\n    }\n\n    this.textTransform = this.tokenService.getTokenValue(\n      `--style-button-${this.buttonSize}-text-transform`\n    ) as TextTransform;\n\n  }\n\n  ngOnChanges(): void {\n    this.ngOnInit();\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/bloomon/variables.css';\n\n$buttonTypes: primary, secondary, tertiary, primary-inverse, secondary-inverse, tertiary-inverse;\n\n$buttonSizes: large, small;\n\n\n@mixin buttonColors($buttonType) {\n    background-color: var(--component-color-button-#{$buttonType}-background);\n    border-color: var(--component-color-button-#{$buttonType}-border);\n    color: var(--component-color-button-#{$buttonType}-text);\n\n    .buttonIcon {\n        fill: currentColor;\n    }\n}\n\n@mixin buttonSize($buttonSize) {\n    $borderWidth: var(--component-border-width-button);\n    $lineHeight: var(--component-size-button-#{$buttonSize}-line-height);\n    $buttonMinimumHeight: var(--component-size-button-#{$buttonSize}-height);\n\n\n    $_calculatedHeight: calc($buttonMinimumHeight / 2);\n    $_calculatedLineHeight: calc($lineHeight / 2);\n\n\n    $paddingX: var(--component-size-button-#{$buttonSize}-padding-x);\n    $paddingY: calc($_calculatedHeight - $_calculatedLineHeight - $borderWidth);\n\n    $paddingX--with-icon: calc($paddingX * 2);\n\n    min-height: $buttonMinimumHeight;\n    min-width: $buttonMinimumHeight;\n    padding-top: $paddingY;\n    padding-right: $paddingX;\n    padding-bottom: $paddingY;\n    padding-left: $paddingX;\n\n    border-width: $borderWidth;\n\n    .button-content {\n        display: flex;\n        align-items: center;\n        gap: var(--component-size-button-#{$buttonSize}-inline-spacing);\n\n        .ui-icon {\n            max-height: $lineHeight;\n            display: flex;\n            align-items: center;\n        }\n\n        .ui-text {\n            line-height: $lineHeight;\n        }\n    }\n\n\n\n    &.button--has-icon {\n        &.button--icon--trailing {\n            .button-content {\n                flex-direction: row-reverse;\n            }\n        }\n        &.button--icon--only {\n            max-width: calc($buttonMinimumHeight - $borderWidth);\n        }\n\n    }\n}\n\n\nui-button {\n    button {\n        /* Reset */\n        border: 0;\n        -webkit-appearance: none;\n        padding: 0;\n        display: inline-flex;\n        text-align: center;\n        justify-content: center;\n        align-items: center;\n        border-style: solid;\n\n\n        // Button Colors\n        @each $buttonType in $buttonTypes {\n            &.type-#{$buttonType} {\n                @include buttonColors(($buttonType));\n            }\n        }\n\n        // Button Sizes\n        @each $buttonSize in $buttonSizes {\n            &.size-#{$buttonSize} {\n                @include buttonSize(($buttonSize));\n            }\n        }\n\n    }\n}\n\n",
                    "styleUrl": "./button.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 30,
                "jsdoctags": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit",
                "OnChanges"
            ],
            "templateData": "<button (click)=\"clickButton()\"\n        [routerLink]=\"href || null\"\n        ngClass=\"{{buttonClasses}}\">\n    <div class=\"button-content\">\n        <ui-icon *ngIf=\"buttonIcon\" [iconName]=\"buttonIcon\" [iconSize]=\"buttonSize\" [iconClass]=\"'buttonIcon'\" [iconContext]=\"iconContext\"></ui-icon>\n        <ui-text *ngIf=\"buttonText && buttonIconPlacement !== 'iconOnly'\" [textTransform]=\"textTransform\">\n            {{buttonText}}\n        </ui-text>\n    </div>\n</button>\n"
        },
        {
            "name": "IconComponent",
            "id": "component-IconComponent-0335154a9a0967c1bd489da06eed231bf5c6d3b2a6343957e439702275b7a3a6f1e076bf6a7f6757013bd9710afd9d1adc13f25994fc616feea702429304e933",
            "file": "projects/oasys-lib/src/lib/components/icon/icon.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-icon",
            "styleUrls": [
                "./icon.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./icon.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "iconClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 19,
                    "type": "string",
                    "decorators": []
                },
                {
                    "name": "iconContext",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "IconContext",
                    "decorators": []
                },
                {
                    "name": "iconHeight",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "number",
                    "decorators": []
                },
                {
                    "name": "iconName",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "IconNames",
                    "decorators": []
                },
                {
                    "name": "iconSize",
                    "defaultValue": "'large'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"small\" | \"large\"",
                    "decorators": []
                },
                {
                    "name": "iconWidth",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "number",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "iconPlacementClass",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 22
                },
                {
                    "name": "size",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 21
                }
            ],
            "methodsClass": [
                {
                    "name": "convertRemToPixels",
                    "args": [
                        {
                            "name": "remString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "number",
                    "typeParameters": [],
                    "line": 26,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "remString",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                },
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 31,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component, Input, OnInit, ViewEncapsulation, ChangeDetectionStrategy } from '@angular/core';\nimport { TokenService } from '../../services/token.service';\nimport { WindowService } from '../../services/window.service';\nimport { IconNames, IconContext } from './icon';\n@Component({\n  selector:'ui-icon',\n  templateUrl: './icon.component.html',\n  styleUrls: ['./icon.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  encapsulation: ViewEncapsulation.None\n})\nexport class IconComponent implements OnInit {\n  @Input() iconSize: 'small'|'large' = 'large';\n  @Input() iconName!: IconNames;\n  @Input() iconContext: IconContext = 'none';\n  \n  @Input() iconWidth?: number;\n  @Input() iconHeight?: number;\n  @Input() iconClass?: string;\n\n  size?: string;\n  iconPlacementClass?: string;\n  \n  constructor(private tokenService: TokenService, private windowRef: WindowService) { }\n\n  convertRemToPixels(remString: string): number {    \n    const remNumber = parseFloat(remString.replace('rem', ''));\n    return remNumber * parseFloat(getComputedStyle(this.windowRef.nativeWindow.document.documentElement).fontSize);\n  }\n\n  ngOnInit(): void {\n    this.size = this.tokenService.getTokenValue(`--size-icon-${this.iconSize}`);;\n    this.iconPlacementClass = `icon-context-${this.iconContext}`;\n    if (!this.iconWidth || !this.iconHeight) {\n      const sizeInPixels = this.convertRemToPixels(this.size);\n      this.iconWidth = sizeInPixels;\n      this.iconHeight = sizeInPixels;\n    }\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$iconContexts: leading, trailing, iconOnly;\n$iconSizes: large, small;\n\n\n@mixin iconSize($iconSize){\n  $iconPositionAdjustment: var(--icon-position-modifier-#{$iconSize});\n\n  &.icon-context-leading {\n    margin-left: #{$iconPositionAdjustment};\n  }\n\n  &.icon-context-trailing {\n    margin-right: #{$iconPositionAdjustment};\n  }\n  \n  &.icon-context-iconOnly {\n    margin-left: #{$iconPositionAdjustment};\n    margin-right: #{$iconPositionAdjustment};\n  }\n\n}\n\n.lib-icon {\n  display: inline-flex;\n\n  // Icon Contexts\n  @each $iconSize in $iconSizes {\n    @include iconSize(($iconSize));\n  }\n}",
                    "styleUrl": "./icon.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    },
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 22,
                "jsdoctags": [
                    {
                        "name": "tokenService",
                        "type": "TokenService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    },
                    {
                        "name": "windowRef",
                        "type": "WindowService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"ui-icon {{iconPlacementClass}}\">\n  <svg xmlns=\"http://www.w3.org/2000/svg\" attr.width=\"{{iconWidth}}px\" attr.height=\"{{iconHeight}}px\" attr.class=\"{{iconClass}}\">\n    <use attr.xlink:href=\"./assets/icons/icons.svg#icon-{{iconName}}-{{iconWidth}}\"></use>\n  </svg>\n</div>\n"
        },
        {
            "name": "LayoutBoxComponent",
            "id": "component-LayoutBoxComponent-3824cb5af46fb0f3554aedfa43278e918f80846af7e7c1292c7591296e60ab844b7c67d9b6f85fdbfd9fa25df4c86a1ead3775e7a1d0cef08bbab6703b17adad",
            "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "host": {},
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-box",
            "styleUrls": [
                "./box.component.scss"
            ],
            "styles": [],
            "template": "<ng-content></ng-content>",
            "templateUrl": [],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "padding",
                    "defaultValue": "'default'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "BoxPaddings",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "boxLayoutClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": true,
                    "description": "",
                    "line": 16
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 22,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, OnInit, ViewEncapsulation } from '@angular/core';\nimport { Input } from '@angular/core';\nimport { Component} from '@angular/core';\n\n@Component({\n  selector:'ui-box',\n  template: '<ng-content></ng-content>',\n  host: {\n        '[class]' : 'boxLayoutClasses'\n      },\n  styleUrls: ['./box.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutBoxComponent implements OnInit {\n  boxLayoutClasses?: string;\n\n  @Input() padding?: BoxPaddings = 'default';\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.boxLayoutClasses = [\n      `ui-layout-box-${this.padding}`\n    ].join(' ');\n  }\n\n}\n\nexport type BoxPaddings = 'xsmall'|'small'|'medium'|'large'|'default';",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "$layout-box-sizes: 'xsmall', 'small', 'default', 'large';\n\n.ui-layout-box-xsmall {\n  padding: var(--size-unit-xsmall);\n}\n\n.ui-layout-box-small {\n  padding: var(--size-unit-small);\n}\n\n.ui-layout-box-default {\n  padding: var(--size-unit-default);\n}\n\n.ui-layout-box-large {\n  padding: var(--size-unit-large);\n}\n",
                    "styleUrl": "./box.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 18
            },
            "implements": [
                "OnInit"
            ]
        },
        {
            "name": "LayoutInlineComponent",
            "id": "component-LayoutInlineComponent-9c6d7dbe5d9d9280d68e160733917e78391a3ea0f17dbd0897b13c0ca00be68551dace44ec2aebed03b099163cf2bca2c1af4551a620436f7ba9a40753ebf7f9",
            "file": "projects/oasys-lib/src/lib/components/layout/inline/inline.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-inline",
            "styleUrls": [
                "./inline.component.css"
            ],
            "styles": [],
            "templateUrl": [
                "./inline.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 14,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, OnInit, ViewEncapsulation } from '@angular/core';\n\n@Component({\n  selector:'ui-inline',\n  templateUrl: './inline.component.html',\n  styleUrls: ['./inline.component.css'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class LayoutInlineComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": ".ui-layout-inline {\n    display: inline-flex;\n    position: relative;\n}\n\n.ui-layout-inline > * {\n    margin-left: var(--layout-inline-spacing-default);\n    margin-right: var(--layout-inline-spacing-default);\n}\n\n.ui-layout-inline:first-child {\n    margin-left: 0;\n}\n\n.ui-layout-inline:last-child {\n    margin-right: 0;\n}\n\n.ui-layout-inline:only-child {\n    margin-left: 0;\n    margin-right: 0;\n}",
                    "styleUrl": "./inline.component.css"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 10
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<div class=\"ui-layout-inline\"><ng-content></ng-content></div>"
        },
        {
            "name": "TextComponent",
            "id": "component-TextComponent-1887c706c5b461d2a7ea09aa7f6fa9435e6c1c7941b3be506b6140032fa3389a08c727d759fc36297668f8d07fd22310a3812b0baa5972e7ffba0d9d050d7043",
            "file": "projects/oasys-lib/src/lib/components/text/text.component.ts",
            "changeDetection": "ChangeDetectionStrategy.OnPush",
            "encapsulation": [
                "ViewEncapsulation.None"
            ],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "ui-text",
            "styleUrls": [
                "./text.component.scss"
            ],
            "styles": [],
            "templateUrl": [
                "./text.component.html"
            ],
            "viewProviders": [],
            "inputsClass": [
                {
                    "name": "textAlign",
                    "defaultValue": "'left'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 13,
                    "type": "\"left\" | \"center\" | \"right\"",
                    "decorators": []
                },
                {
                    "name": "textTransform",
                    "defaultValue": "'none'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 15,
                    "type": "TextTransform",
                    "decorators": []
                },
                {
                    "name": "textWeight",
                    "defaultValue": "'normal'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 14,
                    "type": "\"normal\" | \"medium\" | \"bold\"",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "uiTextClasses",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 17
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 21,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { ChangeDetectionStrategy, Component, Input, OnInit, ViewEncapsulation } from '@angular/core';\nimport { TextTransform } from './text';\n\n@Component({\n  selector:'ui-text',\n  templateUrl: './text.component.html',\n  styleUrls: ['./text.component.scss'],\n  encapsulation: ViewEncapsulation.None,\n  changeDetection: ChangeDetectionStrategy.OnPush\n})\nexport class TextComponent implements OnInit {\n\n  @Input() textAlign: 'left' | 'center' | 'right' = 'left';\n  @Input() textWeight: 'normal' | 'medium' | 'bold' = 'normal';\n  @Input() textTransform: TextTransform = 'none';\n\n  uiTextClasses!: string;\n\n  constructor() { }\n\n  ngOnInit(): void {\n    this.uiTextClasses = [\n      `ui-text--align-${this.textAlign}`,\n      `ui-text--weight-${this.textWeight}`,\n      `ui-text--transform-${this.textTransform}`,\n    ].join(' ');\n  }\n\n}\n",
            "assetsDirs": [],
            "styleUrlsData": [
                {
                    "data": "@import '../../../assets/bloomon/variables.css';\n.ui-text {\n    font-size: var(--size-font-base);\n    font-family: var(--font-family-body);\n    \n    font-weight: var(--font-weight-normal);\n    \n    &.ui-text--weight-medium {\n        font-weight: var(--font-weight-medium);\n    }\n    \n    &.ui-text--weight-bold {\n        font-weight: var(--font-weight-bold);\n    }\n\n    &.ui-text--transform-uppercase {\n        text-transform: uppercase;\n    }\n}\n\n\n// Modifiers\n.ui-text { \n    &.ui-text--align-left {\n        text-align: left;\n    }\n    &.ui-text--align-center {\n        text-align: center;\n    }\n    &.ui-text--align-right {\n        text-align: right;\n    }\n}",
                    "styleUrl": "./text.component.scss"
                }
            ],
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [],
                "line": 17
            },
            "implements": [
                "OnInit"
            ],
            "templateData": "<span class=\"ui-text\" [ngClass]=\"uiTextClasses\"><ng-content></ng-content></span>"
        }
    ],
    "modules": [
        {
            "name": "OasysComponentsModule",
            "id": "module-OasysComponentsModule-17dff6812c1cbe3473ba07600dd899f580b1573f7b6275b7b1570d8aacea909d7fec9457037af54b8b2d719471f4859e26c84cd81c955a0a0f0be060d2a92f2d",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "stories/_OasysComponents.module.ts",
            "methods": [],
            "sourceCode": "\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ButtonComponent, TextComponent, IconComponent } from 'projects/oasys-lib/src/public-api';\n\n\nconst OasysComponents = [\n  ButtonComponent,\n  TextComponent,\n  IconComponent\n];\n\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: OasysComponents,\n  exports: OasysComponents\n})\nexport class OasysComponentsModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": []
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        },
        {
            "name": "OasysLibModule",
            "id": "module-OasysLibModule-f92948ab59c09a4ac8864ffc634598f8736357dca27ea5dfe93e1591c81a1378aba4d991e87270ba06cda1b4da01677e586a7c9c5185df093e693105fdf0219e",
            "description": "",
            "deprecationMessage": "",
            "deprecated": false,
            "file": "projects/oasys-lib/src/lib/oasys-lib.module.ts",
            "methods": [],
            "sourceCode": "import { APP_BASE_HREF, CommonModule } from '@angular/common';\nimport { NgModule } from '@angular/core';\nimport { RouterModule } from '@angular/router';\nimport { ButtonComponent } from './components/button/button.component';\nimport { LayoutInlineComponent } from './components/layout/inline/inline.component';\nimport { TextComponent } from './components/text/text.component';\nimport { IconComponent } from './components/icon/icon.component';\nimport { LayoutBoxComponent } from './components/layout/box/box.component';\nimport { WindowService } from './services/window.service';\n\n\n\n@NgModule({\n  declarations: [\n    ButtonComponent,\n    LayoutInlineComponent,\n    TextComponent,\n    IconComponent,\n    LayoutBoxComponent\n  ],\n  imports: [\n    CommonModule,\n    RouterModule.forRoot([])\n  ],\n  exports: [\n    ButtonComponent,\n    TextComponent,\n    LayoutBoxComponent\n  ],\n  providers: [\n    WindowService,\n    {provide: APP_BASE_HREF, useValue: '/'}\n  ]\n})\nexport class OasysLibModule { }\n",
            "children": [
                {
                    "type": "providers",
                    "elements": [
                        {
                            "name": "WindowService"
                        }
                    ]
                },
                {
                    "type": "declarations",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "IconComponent"
                        },
                        {
                            "name": "LayoutBoxComponent"
                        },
                        {
                            "name": "LayoutInlineComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "imports",
                    "elements": []
                },
                {
                    "type": "exports",
                    "elements": [
                        {
                            "name": "ButtonComponent"
                        },
                        {
                            "name": "LayoutBoxComponent"
                        },
                        {
                            "name": "TextComponent"
                        }
                    ]
                },
                {
                    "type": "bootstrap",
                    "elements": []
                },
                {
                    "type": "classes",
                    "elements": []
                }
            ]
        }
    ],
    "miscellaneous": {
        "variables": [
            {
                "name": "actionsData",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "object",
                "defaultValue": "{\n  buttonClick: action('buttonClick'),\n}"
            },
            {
                "name": "context",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/oasys-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
            },
            {
                "name": "OasysComponents",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/_OasysComponents.module.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  ButtonComponent,\n  TextComponent,\n  IconComponent\n]"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary2",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "Primary3",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            },
            {
                "name": "require",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "projects/oasys-lib/src/test.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "literal type"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Button.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<ButtonComponent>",
                "defaultValue": "(args: ButtonComponent) => ({\n  props: args\n  // props: {\n  //   ...args,\n    // buttonClick: actionsData.buttonClick,\n    // buttonClasses: 'hello' //args.buttonClasses\n  // },\n})"
            },
            {
                "name": "Template",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story<TextComponent>",
                "defaultValue": "(args: TextComponent) => ({\n  props: args,\n  template: `<ui-text>{{ ngContent }}</ui-text>`\n})"
            },
            {
                "name": "Text",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "stories/Text.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "",
                "defaultValue": "Template.bind({})"
            }
        ],
        "functions": [
            {
                "name": "_window",
                "file": "projects/oasys-lib/src/lib/services/window.service.ts",
                "ctype": "miscellaneous",
                "subtype": "function",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "args": [],
                "returnType": "any"
            }
        ],
        "typealiases": [
            {
                "name": "BoxPaddings",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"xsmall\" | \"small\" | \"medium\" | \"large\" | \"default\"",
                "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconContext",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"leading\" | \"trailing\" | \"iconOnly\" | \"none\"",
                "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "IconNames",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"pin\" | \"heart\" | \"basket\"",
                "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            },
            {
                "name": "TextTransform",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"none\" | \"uppercase\" | \"lowercase\" | \"capitalize\"",
                "file": "projects/oasys-lib/src/lib/components/text/text.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 186
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "stories/Button.stories.ts": [
                {
                    "name": "actionsData",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "object",
                    "defaultValue": "{\n  buttonClick: action('buttonClick'),\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary2",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Primary3",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                },
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Button.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<ButtonComponent>",
                    "defaultValue": "(args: ButtonComponent) => ({\n  props: args\n  // props: {\n  //   ...args,\n    // buttonClick: actionsData.buttonClick,\n    // buttonClasses: 'hello' //args.buttonClasses\n  // },\n})"
                }
            ],
            "projects/oasys-lib/src/test.ts": [
                {
                    "name": "context",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/oasys-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "require.context('./', true, /\\.spec\\.ts$/)"
                },
                {
                    "name": "require",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "projects/oasys-lib/src/test.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "literal type"
                }
            ],
            "stories/_OasysComponents.module.ts": [
                {
                    "name": "OasysComponents",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/_OasysComponents.module.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  ButtonComponent,\n  TextComponent,\n  IconComponent\n]"
                }
            ],
            "stories/Text.stories.ts": [
                {
                    "name": "Template",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story<TextComponent>",
                    "defaultValue": "(args: TextComponent) => ({\n  props: args,\n  template: `<ui-text>{{ ngContent }}</ui-text>`\n})"
                },
                {
                    "name": "Text",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "stories/Text.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "",
                    "defaultValue": "Template.bind({})"
                }
            ]
        },
        "groupedFunctions": {
            "projects/oasys-lib/src/lib/services/window.service.ts": [
                {
                    "name": "_window",
                    "file": "projects/oasys-lib/src/lib/services/window.service.ts",
                    "ctype": "miscellaneous",
                    "subtype": "function",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "args": [],
                    "returnType": "any"
                }
            ]
        },
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "projects/oasys-lib/src/lib/components/layout/box/box.component.ts": [
                {
                    "name": "BoxPaddings",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"xsmall\" | \"small\" | \"medium\" | \"large\" | \"default\"",
                    "file": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/oasys-lib/src/lib/components/icon/icon.ts": [
                {
                    "name": "IconContext",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"leading\" | \"trailing\" | \"iconOnly\" | \"none\"",
                    "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                },
                {
                    "name": "IconNames",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"pin\" | \"heart\" | \"basket\"",
                    "file": "projects/oasys-lib/src/lib/components/icon/icon.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ],
            "projects/oasys-lib/src/lib/components/text/text.ts": [
                {
                    "name": "TextTransform",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"none\" | \"uppercase\" | \"lowercase\" | \"capitalize\"",
                    "file": "projects/oasys-lib/src/lib/components/text/text.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 186
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "projects/oasys-lib/src/lib/components/button/button.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "ButtonComponent",
                "coveragePercent": 0,
                "coverageCount": "0/15",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/icon/icon.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "IconComponent",
                "coveragePercent": 0,
                "coverageCount": "0/12",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/layout/box/box.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutBoxComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/layout/inline/inline.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LayoutInlineComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/components/text/text.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TextComponent",
                "coveragePercent": 0,
                "coverageCount": "0/7",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/oasys-lib.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "OasysLibService",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/token.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "TokenService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/window.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "WindowService",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/lib/services/window.service.ts",
                "type": "function",
                "linktype": "miscellaneous",
                "linksubtype": "function",
                "name": "_window",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "context",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "projects/oasys-lib/src/test.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "require",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "actionsData",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary2",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary3",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Button.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Template",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/Text.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Text",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "stories/_OasysComponents.module.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "OasysComponents",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}